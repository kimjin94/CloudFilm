<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminMapper">

	<!-- 최근 리뷰 리스트 가져오기 -->
	<select id="getreviewlist" parameterType="int" resultType="board">
		select *
		from 
		(
		    select rownum rnum, board.* 
		    from  
		    (
		        select 
		        a.BOARD_NUM, a.MEM_ID, a.BOARD_TITLE, a.BOARD_CONT, a.BOARD_IMG, 
		        a.BOARD_VIDEO, a.BOARD_FILTER, a.BOARD_DATE, a.BOARD_COUNT, 
		        a.CATE_NUM, a.BOARD_YN, a.INFO_YN, a.MEM_NUM, e.mem_nick
		        , count(b.gb_sort) as board_good
		        , count(c.gb_sort) as board_bad
		        , count(d.re_num) as re_count
		        from board a
		            left join goodandbad b
		                on a.board_num = b.board_num
		                and b.gb_sort = 'g'
		            left join goodandbad c
		                on a.board_num = c.board_num 
		                and c.gb_sort = 'b'
		            left join reply d
		                on a.board_num = d.board_num
		            left join member e
		                on a.mem_num = e.mem_num
		        where a.cate_num = 1 
		        	and board_yn ='y'
		        group by 
	        		 a.board_num, a.MEM_ID, a.BOARD_TITLE, a.BOARD_CONT, a.BOARD_IMG, 
					 a.BOARD_VIDEO, a.BOARD_FILTER, a.BOARD_DATE, a.BOARD_COUNT, a.CATE_NUM, 
					 a.BOARD_YN, a.INFO_YN, a.MEM_NUM, e.mem_nick
		        order by a.BOARD_num desc
		    ) board
		)
		<![CDATA[ 
		where rnum >= 1  and rnum <= (#{limit} )
		]]>
	</select>
	
	<!-- 추천 리스트 가져오기 -->
	<select id="getrecommendlist" parameterType="int" resultType="board">
		select *
		from 
		(
		    select rownum rnum, board.* 
		    from  
		    (
		        select 
		        a.BOARD_NUM, a.MEM_ID, a.BOARD_TITLE, a.BOARD_CONT, a.BOARD_IMG, 
		        a.BOARD_VIDEO, a.BOARD_FILTER, a.BOARD_DATE, a.BOARD_COUNT, 
		        a.CATE_NUM, a.BOARD_YN, a.INFO_YN, a.MEM_NUM, e.mem_nick
		        , count(b.gb_sort) as board_good
		        , count(c.gb_sort) as board_bad
		        , count(d.re_num) as re_count
		        from board a
		            left join goodandbad b
		                on a.board_num = b.board_num
		                and b.gb_sort = 'g'
		            left join goodandbad c
		                on a.board_num = c.board_num 
		                and c.gb_sort = 'b'
		            left join reply d
		                on a.board_num = d.board_num
		            left join member e
		                on a.mem_num = e.mem_num
		        where a.cate_num = 2 
		        	and board_yn ='y'
		        group by 
	        		 a.board_num, a.MEM_ID, a.BOARD_TITLE, a.BOARD_CONT, a.BOARD_IMG, 
					 a.BOARD_VIDEO, a.BOARD_FILTER, a.BOARD_DATE, a.BOARD_COUNT, a.CATE_NUM, 
					 a.BOARD_YN, a.INFO_YN, a.MEM_NUM, e.mem_nick
		        order by a.BOARD_num desc
		    ) board
		)
		<![CDATA[ 
		where rnum >= 1  and rnum <= (#{limit} )
		]]>
	</select>
	
	<!-- 예고편 리스트 가져오기 -->
	<select id="gettrailerlist" parameterType="int" resultType="board">
		select *
		from 
		(
		    select rownum rnum, board.* 
		    from  
		    (
		        select 
		        a.BOARD_NUM, a.MEM_ID, a.BOARD_TITLE, a.BOARD_CONT, a.BOARD_IMG, 
		        a.BOARD_VIDEO, a.BOARD_FILTER, a.BOARD_DATE, a.BOARD_COUNT, 
		        a.CATE_NUM, a.BOARD_YN, a.INFO_YN, a.MEM_NUM, e.mem_nick
		        , count(b.gb_sort) as board_good
		        , count(c.gb_sort) as board_bad
		        , count(d.re_num) as re_count
		        from board a
		            left join goodandbad b
		                on a.board_num = b.board_num
		                and b.gb_sort = 'g'
		            left join goodandbad c
		                on a.board_num = c.board_num 
		                and c.gb_sort = 'b'
		            left join reply d
		                on a.board_num = d.board_num
		            left join member e
		                on a.mem_num = e.mem_num
		        where a.cate_num = 3 
		        	and board_yn ='y'
		        group by 
	        		 a.board_num, a.MEM_ID, a.BOARD_TITLE, a.BOARD_CONT, a.BOARD_IMG, 
					 a.BOARD_VIDEO, a.BOARD_FILTER, a.BOARD_DATE, a.BOARD_COUNT, a.CATE_NUM, 
					 a.BOARD_YN, a.INFO_YN, a.MEM_NUM, e.mem_nick
		        order by a.BOARD_num desc
		    ) board
		)
		<![CDATA[ 
		where rnum >= 1  and rnum <= (#{limit} )
		]]>
	</select>
	
	<select id="getAdminSearchListCount" parameterType="java.util.Map" resultType="int">
		select count(board_num) 
		from board b
			left join member m
				on b.mem_num = m.mem_num
				<choose>
					<when test="cate_num == 0">
						 WHERE b.cate_num != 0
					</when>
					<otherwise>
						 WHERE b.cate_num = #{cate_num}
					</otherwise>
				</choose>
				<choose>
					<when test="board_yn != '' ">
						 and board_yn = #{board_yn}
					</when>
				</choose>
				<choose>
					<when test="keyword == '' or search == '' ">
					</when>
					<otherwise >
		        		AND ${search} LIKE '%'||#{keyword}||'%'
	        		</otherwise>
				</choose>
	        	
	        	<if test="board_filter != null">
	        		AND board_filter LIKE '%'||#{board_filter}||'%'
	        	</if>
	</select>
	
	<!-- 관리자페이지에서 게시판관리하기 -->
	<select id="getAdminSearchList" parameterType="java.util.Map" resultType="board">
		select *
		from 
		(
		    select rownum rnum, board.* 
		    from  
		    (
		        select 
		        a.BOARD_NUM, a.MEM_ID, a.BOARD_TITLE, a.BOARD_CONT, a.BOARD_IMG, 
		        a.BOARD_VIDEO, a.BOARD_FILTER, a.BOARD_DATE, a.BOARD_COUNT, 
		        a.CATE_NUM, a.BOARD_YN, a.INFO_YN, a.MEM_NUM, e.mem_nick
		        , count(b.gb_sort) as board_good
		        , count(c.gb_sort) as board_bad
		        , count(d.re_num) as re_count
		        from board a
		            left join goodandbad b
		                on a.board_num = b.board_num
		                and b.gb_sort = 'g'
		            left join goodandbad c
		                on a.board_num = c.board_num 
		                and b.gb_sort = 'b'
		            left join reply d
		                on a.board_num = d.board_num
		            left join member e
		                on a.mem_num = e.mem_num
		       <choose>
					<when test="cate_num == 0">
						 WHERE a.cate_num != 0
					</when>
					<otherwise>
						 WHERE a.cate_num = #{cate_num}
					</otherwise>
				</choose>
				<choose>
					<when test="board_yn != '' ">
						 and a.board_yn = #{board_yn}
					</when>
				</choose>
	        	<choose>
					<when test="keyword == '' or search == '' ">
					</when>
					<otherwise >
		        		AND ${search} LIKE '%'||#{keyword}||'%'
	        		</otherwise>
				</choose>
	        	<if test="board_filter != null">
	        		AND board_filter LIKE '%'||#{board_filter}||'%'
	        	</if>
		        group by 
	        		 a.board_num, a.MEM_ID, a.BOARD_TITLE, a.BOARD_CONT, a.BOARD_IMG, 
					 a.BOARD_VIDEO, a.BOARD_FILTER, a.BOARD_DATE, a.BOARD_COUNT, a.CATE_NUM, 
					 a.BOARD_YN, a.INFO_YN, a.MEM_NUM, e.mem_nick
		        order by a.BOARD_num desc
		    ) board
		)
		<![CDATA[ 
		where rnum >= ((#{page}-1) * #{limit}+1)  and rnum <= (#{page} * #{limit})
		]]>
	</select>
	
	<!-- 관리자 게시글 정지 -->
	<update id="setN" parameterType="int">
		update board
		set
		board_yn = 'n'
		where board_num = #{board_num}
	</update>
	
	<!-- 관리자 게시글 노출 -->
	<update id="setY" parameterType="int">
		update board
		set
		board_yn = 'y'
		where board_num = #{board_num}
	</update>
	
	<!-- 총 회원수 가져오기 -->
	<select id="getAdminMemberlistCount" parameterType="java.util.Map" resultType="int">
		select count(mem_num) from member m
		<choose>
			<when test="mem_yn != '' ">
				 where m.mem_yn = #{mem_yn}
			</when>
			<otherwise>
				 where m.mem_yn IS NOT NULL
			</otherwise>
		</choose>
		<choose>
			<when test="keyword == '' or search == '' ">
			</when>
			<otherwise >
	       		AND ${search} LIKE '%'||#{keyword}||'%'
	      	</otherwise>
		</choose>
	</select>
	
	<!-- 회원 리스트 가져오기 -->
	<select id="getAdminMemberlist" parameterType="java.util.Map" resultType="member">
		select *
		from 
		(	
			select rownum rnum, member.* 
		    from  
		    (
		   	 select 
                m.mem_num, m.mem_id, m.mem_pass, m.mem_email, m.mem_img, 
                m.mem_date, m.mem_grade, m.mem_yn, m.mem_nick 
		        , (SELECT COUNT(*) FROM board b WHERE m.mem_num = b.mem_num ) as board_writecount
		        , (SELECT COUNT(*) FROM reply r WHERE m.mem_num = r.mem_num ) as re_writecount
		        from member m
		        <choose>
					<when test="mem_yn != '' ">
						 where m.mem_yn = #{mem_yn}
					</when>
					<otherwise>
						 where m.mem_yn IS NOT NULL
					</otherwise>
				</choose>
				<choose>
					<when test="keyword == '' or search == '' ">
					</when>
					<otherwise >
		        		AND ${search} LIKE '%'||#{keyword}||'%'
	        		</otherwise>
				</choose>
		        order by m.mem_num desc
		    ) member
		)
		<![CDATA[ 
		where rnum >= ((#{page}-1) * #{limit}+1)  and rnum <= (#{page} * #{limit})
		]]>
	</select>
	
	<!-- 관리자 게시글 정지 -->
	<update id="setmemN" parameterType="int">
		update member
		set
		mem_yn = 'n'
		where mem_num = #{mem_num}
	</update>
	
	<!-- 관리자 게시글 노출 -->
	<update id="setmemY" parameterType="int">
		update member
		set
		mem_yn = 'y'
		where mem_num = #{mem_num}
	</update>
	
</mapper>