<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="trailer">

	<!-- 예고편 글쓰기 -->
	<insert id="insertTrailer" parameterType="board">
		insert into board
		values
		(board_seq.nextval, '관리자', #{board_title}, #{board_cont},
		#{board_img}, #{board_video}, #{board_filter}, SYSDATE, 
		0, 0, 0, 3, 'y', 'n', 1)
	</insert>
	
	<!-- 조회수 증가 -->
	<update id="updateCount" parameterType="int">
		update board
		set
		board_count = board_count+1
		where board_num = #{board_num}
	</update>
	
	<!-- 예고편 글 갯수 가져오기 -->
	<select id="getListCount" resultType="int">
		select count(board_num) from board 
		where cate_num = 3 and board_yn ='y'
	</select>
	
	<!-- 예고편 리스트 가져오기 -->
	<select id="getBoardList" parameterType="int" resultType="board">
		select *
		from 
		(
		    select rownum rnum, board.* 
		    from  
		    (
		        select 
		        a.BOARD_NUM, a.MEM_ID, a.BOARD_TITLE, a.BOARD_CONT, a.BOARD_IMG, 
		        a.BOARD_VIDEO, a.BOARD_FILTER, a.BOARD_DATE, a.BOARD_COUNT, 
		        a.CATE_NUM, a.BOARD_YN, a.INFO_YN, a.MEM_NUM, e.mem_nick
		        , count(b.gb_sort) as board_good
		        , count(c.gb_sort) as board_bad
		        , count(d.re_num) as re_count
		        from board a
		            left join goodandbad b
		                on a.board_num = b.board_num
		                and b.gb_sort = 'g'
		            left join goodandbad c
		                on a.board_num = c.board_num 
		                and c.gb_sort = 'b'
		            left join reply d
		                on a.board_num = d.board_num
		            left join member e
		                on a.mem_num = e.mem_num
		        where a.cate_num = 3 
		        	and board_yn ='y'
		        group by 
	        		 a.board_num, a.MEM_ID, a.BOARD_TITLE, a.BOARD_CONT, a.BOARD_IMG, 
					 a.BOARD_VIDEO, a.BOARD_FILTER, a.BOARD_DATE, a.BOARD_COUNT, a.CATE_NUM, 
					 a.BOARD_YN, a.INFO_YN, a.MEM_NUM, e.mem_nick
		        order by a.BOARD_num desc
		    ) board
		)
		<![CDATA[ 
		where rnum >= ((#{page}-1) * 10+1)  and rnum <= (#{page} * 10)
		]]>

	</select>
	
	<!-- 예고편 상세페이지 -->
	<select id="getBoardDetail" parameterType="int" resultType="board">
		select
		 		a.BOARD_NUM, a.MEM_ID, a.BOARD_TITLE, a.BOARD_CONT, a.BOARD_IMG, 
		        a.BOARD_VIDEO, a.BOARD_FILTER, a.BOARD_DATE, a.BOARD_COUNT, 
		        a.CATE_NUM, a.BOARD_YN, a.INFO_YN, a.MEM_NUM, b.mem_nick, b.mem_img
		from board a
			left join member b
				on a.mem_num = b.mem_num
		where board_num = #{board_num}
	</select>
	
	<!-- 좋아요 -->
	<select id="getTrailerGood" parameterType="int" resultType="int">
		select count(gb_num) from GOODANDBAD where board_num = #{board_num} and GB_SORT = 'g'
	</select>
	
	<!-- 싫어요 -->
	<select id="getTrailerbad" parameterType="int" resultType="int">
		select count(gb_num) from GOODANDBAD where board_num = #{board_num} and GB_SORT = 'b'
	</select>
	
	<!-- 추천 insert -->
	<insert id="insertgood" parameterType="java.util.Map">
		insert into GOODANDBAD
		values
		(gb_seq.nextval,
		#{board_num},
		#{mem_num},
		'g')
	</insert>
	
	<!-- 추천 취소 -->
	<delete id="deletegood" parameterType="java.util.Map">
		delete from GOODANDBAD
		where 
		board_num = #{board_num} AND
		mem_num = #{mem_num} AND
		GB_SORT = 'g'
	</delete>
	
	<!-- 비추 insert -->
	<insert id="insertbad" parameterType="java.util.Map">
		insert into GOODANDBAD
		values
		(gb_seq.nextval,
		#{board_num},
		#{mem_num},
		'b')
	</insert>
	
	<!-- 비추  delete -->
	<delete id="deletebad" parameterType="java.util.Map">
		delete from GOODANDBAD
		where 
		board_num = #{board_num} AND
		mem_num = #{mem_num} AND
		GB_SORT = 'b'
	</delete>
	
	<!-- 좋아요 눌렀었는지 확인 -->
	<select id="checkTrailerGood" parameterType="java.util.Map" resultType="int">
		select count(board_num) from GOODANDBAD
		where
		board_num = #{board_num} AND
		mem_num = #{mem_num} AND
		GB_SORT = 'g'
	</select>
	
	<!-- 싫어요 눌렀었는지 확인 -->
	<select id="checkTrailerBad" parameterType="java.util.Map" resultType="int">
		select count(board_num) from GOODANDBAD
		where
		board_num = #{board_num} AND
		mem_num = #{mem_num} AND
		GB_SORT = 'b'
	</select>
	
	<select id="getTrailerDetailAtReply" parameterType="int" resultType="board">
		select * from board
		where board_num = #{board_num}
	</select>
	
	<!-- 게시판 검색  결과물 갯수 -->
	<select id="getSearchListCount" parameterType="java.util.Map" resultType="int">
		select count(board_num) 
		from board b
			left join member m
				on b.mem_num = m.mem_num
			 WHERE b.cate_num = 3
	        	and board_yn ='y'
	        	<if test="keyword != null">
		        		AND ${search} LIKE '%'||#{keyword}||'%'
	        	</if>
	        	<if test="board_filter != null">
	        		AND board_filter LIKE '%'||#{board_filter}||'%'
	        	</if>
	</select>
	
	<!-- 게시판 검색 결과물 list -->
	<select id="getSearchList" parameterType="java.util.Map" resultType="board">
		select *
		from 
		(
		    select rownum rnum, board.* 
		    from  
		    (
		        select 
		        a.BOARD_NUM, a.MEM_ID, a.BOARD_TITLE, a.BOARD_CONT, a.BOARD_IMG, 
		        a.BOARD_VIDEO, a.BOARD_FILTER, a.BOARD_DATE, a.BOARD_COUNT, 
		        a.CATE_NUM, a.BOARD_YN, a.INFO_YN, a.MEM_NUM, e.mem_nick
		        , count(b.gb_sort) as board_good
		        , count(c.gb_sort) as board_bad
		        , count(d.re_num) as re_count
		        from board a
		            left join goodandbad b
		                on a.board_num = b.board_num
		                and b.gb_sort = 'g'
		            left join goodandbad c
		                on a.board_num = c.board_num 
		                and b.gb_sort = 'b'
		            left join reply d
		                on a.board_num = d.board_num
		            left join member e
		                on a.mem_num = e.mem_num
		        where a.cate_num = 3 
		        	and board_yn ='y'
		        	<if test="keyword != null">
		        		AND ${search} LIKE '%'||#{keyword}||'%'
		        	</if>
		        	<if test="board_filter != null">
		        		AND board_filter LIKE '%'||#{board_filter}||'%'
		        	</if>
		        group by 
	        		 a.board_num, a.MEM_ID, a.BOARD_TITLE, a.BOARD_CONT, a.BOARD_IMG, 
					 a.BOARD_VIDEO, a.BOARD_FILTER, a.BOARD_DATE, a.BOARD_COUNT, a.CATE_NUM, 
					 a.BOARD_YN, a.INFO_YN, a.MEM_NUM, e.mem_nick
		        order by a.BOARD_num desc
		    ) board
		)
		<![CDATA[ 
		where rnum >= ((#{page}-1) * 10+1)  and rnum <= (#{page} * 10)
		]]>
	</select>
	
	<!-- 예고편 수정 -->
	<update id="updateTrailer" parameterType="board">
		update board
		set
		board_title = #{board_title}
		, board_cont = #{board_cont}
		, board_video = #{board_video}
		, board_filter = #{board_filter}
		where board_num = #{board_num}
	
	</update>
	
	<!-- 예고편 삭제하기 -->
	<update id="deleteTrailer" parameterType="int">
		update board
		set
		board_yn = 'n'
		where board_num = #{board_num}
	</update>
	
	
</mapper>